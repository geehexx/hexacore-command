version: "3"

vars:
  UV: uv

tasks:
  default:
    desc: Show all available tasks.
    cmds:
      - task --list
    silent: true

  game:run:
    desc: Launch the Hexa-Core Command renderer entrypoint.
    cmds:
      - "{{.UV}} run python -m hexa_core.main"

  test:unit:
    desc: Run the full pytest suite, including spec-kit specs.
    cmds:
      - "{{.UV}} run pytest"

  test:unit:parallel:
    desc: Run spec-kit tests in parallel using pytest-xdist.
    cmds:
      - "{{.UV}} run pytest -n auto tests/spec/"

  test:unit:cov:
    desc: Run unit suite with coverage reporting.
    cmds:
      - "{{.UV}} run pytest --cov=src/hexa_core --cov-report=term-missing"

  test:spec:
    desc: Execute only spec-kit style tests in tests/spec/.
    cmds:
      - "{{.UV}} run pytest tests/spec"

  test:bdd:
    desc: Execute BDD feature tests in tests/features/.
    cmds:
      - "{{.UV}} run pytest tests/features"

  test:benchmarks:
    desc: Run the benchmark suite with pytest-codspeed in parallel.
    cmds:
      - "{{.UV}} run pytest --codspeed -n auto tests/benchmarks/"

  test:benchmarks:serial:
    desc: Run CodSpeed benchmarks without parallelization for debugging.
    cmds:
      - "{{.UV}} run pytest --codspeed tests/benchmarks/"

  coverage:report:
    desc: Generate a coverage report with enforced thresholds.
    deps:
      - test:unit:cov

  test:property:
    desc: Execute property-based tests.
    cmds:
      - "{{.UV}} run pytest tests/property"

  lint:ruff:
    desc: Run Ruff linting and autofix validation.
    cmds:
      - "{{.UV}} run ruff check ."

  lint:mypy:
    desc: Type-check engine and supporting modules with MyPy.
    cmds:
      - "{{.UV}} run mypy src/hexa_core"

  lint:markdown:
    desc: Lint Markdown documentation with PyMarkdown.
    cmds:
      - "{{.UV}} run pymarkdown --config .pymarkdown.json scan ."

  lint:complexity:
    desc: Analyze code complexity with Radon metrics.
    cmds:
      - "{{.UV}} run radon cc -s -a src"
      - "{{.UV}} run radon mi -s src"

  lint:all:
    desc: Run all linting tasks (Ruff, MyPy, Markdown).
    deps:
      - lint:ruff
      - lint:mypy
      - lint:markdown

  audit:deps:
    desc: Audit dependencies for vulnerabilities with pip-audit.
    cmds:
      - "{{.UV}} run pip-audit --ignore-vuln GHSA-4xh5-x5gv-qwph"

  security:audit:
    desc: Audit project dependencies for known vulnerabilities.
    deps:
      - audit:deps

  ci:pre-commit:
    desc: Run all pre-commit hooks across the repository.
    cmds:
      - "{{.UV}} run pre-commit run --all-files"

  ci:check:
    desc: Run linting and tests to validate CI requirements.
    deps:
      - lint:all
      - test:unit

  ci:benchmarks:
    desc: Execute the benchmark suite for performance verification.
    deps:
      - test:benchmarks
